5 + 5 + 6
5 + 5 + 6
5 * 5
10/2
1 - 5
3^2
2^5
5 < 3
3 < 5
8 == 10
8 == 8
4 <= 5
4 <= 4
4 != 5
4 != 4
x <- 5
x
x
y
y
z
x
y <- 5
z <- 6
y
z
x+y+z
#############################################################
## vector manipulation
#############################################################
## create a vector
xvec <- c(1,3,2,10,5,8,10)
xvec
yvec <- 0:10
yvec
letters
LETTERS
zvec <- seq(1,10,2)
zvec
seq(1,8,1)
zvec <- seq(1,10,2)
zvec
rep(0,10)
avec <- rep(1.87,20)
avec
## subscript a vector
xvec[3]
xvec[2:4]
i <- 4
xvec[i]
xvec
## length of vector
length(xvec)
length(yvec)
length(zvec)
log10(10)
log10(100)
log10(10)
log10(10)
log10(100)
exp(2.30258509)
log(10)
exp(2.30258509)
sqrt(25)
min(xvec)
max(yvec)
sum(xvec)
mean(xvec)
median(xvec)
range(xvec)
var(xvec)
sd(xvec)
sample(xvec,3,replace = TRUE)
cumsum(xvec)
cumprod(xvec)
sample(xvec,3,replace = TRUE)
sample(xvec,3,replace = TRUE)
sample(xvec,3,replace = TRUE)
sample(xvec,3,replace = TRUE)
sample(xvec,3,replace = TRUE)
sample(xvec,20,replace = TRUE)
mysamp<- sample(xvec,20,replace = TRUE)
mysamp
unique(mysamp)
round(15.2456, 0)
round(15.2456, 2)
ceiling(16.5)
floor(16.5)
vec <- c(1.34, 2.13, 5.32, 1.56, 2.1004)
vec
round(vec, 0)
round(vec, 1)
vec[3] <- NA
vec
is.na(vec)
which(is.na(vec)==T)
#############################################################
## frequencies
#############################################################
xvec <- c(1,3,2,10,5,8,10)
xvec
table(xvec)
sort(table(xvec),decreasing=TRUE)
names(sort(table(xvec),decreasing=TRUE))
names(sort(table(xvec),decreasing=TRUE))[1]
as.numeric(names(sort(table(xvec),decreasing=TRUE))[1])
vec.1 <- seq(1,10,1)
vec.2 <- rep(2,10)
vec.3 <- c(1,10,8,3,3,5,4,10,9,1)
length(vec.1)
length(vec.2)
length(vec.3)
dat.1 <- data.frame(vec.1,vec.2,vec.3)
dat.1
dat.2 <- matrix(0,nrow=10,ncol=3)
dat.2[,1] <- vec.1
dat.2[,2] <- vec.2
dat.2[,3] <- vec.3
dat.2
colnames(dat.1) <- c("A","B","C")
dat.1
dim(dat.1)
dim(dat.2)
dim(dat.1)[1]
dim(dat.1)[2]
#############################################################
## simple loops
#############################################################
iter <- 100 # number of iterations
gauss.means <- rep(0,iter) ## storage vector
mymean <- 100; mysd <- 17.5
for (i in 1:iter) {
gauss.means[i] <- mean(rnorm(100,mymean,mysd))
print(i) ## show progression of loop
}
print(i)} ## show progression of loop
for (i in 1:iter) {
gauss.dist <-(rnorm(100,mymean,mysd))
gauss.means[i] <- mean(rnorm(100,mymean,mysd))
print(i) ## show progression of loop
}
hist(rnorm(100,mymean,mysd))
hist(rnorm(10000,mymean,mysd))
gauss.dist
mean(gauss.dist)
gauss.means <- rep(0,iter) ## storage vector
gauss.means
for (i in 1:iter) {
gauss.dist <-(rnorm(100,mymean,mysd))
gauss.means[i] <- mean(rnorm(100,mymean,mysd))
print(i) ## show progression of loop
}
gauss.means # list output
hist(gauss.means)
abline(v=mymean, lwd=3)
abline(v=mymean, lwd=30)
abline(v=mymean, lwd=2.3)
abline(v=mymean, lwd=2.3)
abline(v=mymean, lwd=2)
abline(v=mymean, lwd=2, lty=2, col='green')
hist(gauss.means)
abline(v=mymean, lwd=2, lty=2, col='green')
##########################
## if and ifelse statements
##########################
vec.LETT <- sample(LETTERS[1:5],20,replace=T) #RESAMPLE WITH REPLACEMENT
vec.LETT
vec.LETT.NUM <- ifelse(vec.LETT == "D", 4, vec.LETT)
vec.LETT.NUM
iter <- 100
x <- runif(100, 1, 10)
y <- runif(100, 20, 30)
xy <- data.frame(x,y)
head(xy)
x
y
xy
head(xy)
z <- rep(0,100)
tail(xy)
plot(x,y)
plot(x,y,z)
z[i] <- x[i]/y[i]
for (i in 1:iter) {
if (xy$x[i] < 5)
z[i] <- x[i]*y[i]
else {
z[i] <- x[i]/y[i]
}
z
plot(x,y,z)
plot(x,y)
else {
z[i] <- x[i]/y[i]
}
xyz <- data.frame(xy,z)
head(xyz)
iter <- 100
x <- runif(100, 1, 10)
y <- runif(100, 20, 30)
xy <- data.frame(x,y)
head(xy)
z <- rep(0,100)
for (i in 1:iter) {
if (xy$x[i] < 5)
z[i] <- x[i]*y[i]
else {
z[i] <- x[i]/y[i]
}
} # end i loop
xyz <- data.frame(xy,z)
head(xyz)
# basic plotting
xs <- runif(100, 1, 10)
ys <- rnorm(100, mean=10, sd=2)
plot(xs, ys)
plot(xs, ys, pch=19, xlab="x values", ylab="y values", main="my bivariate plot")
linfit <- lm(ys~xs)
summary(linfit)
abline(linfit, lty=2, lwd=2, col="red")
hist(xs)
hist(ys)
seq(1,8,1)
seq(20:50)
seq(20,50)
mean(20:50)
sum(51:91)
sample(seq(20,50),7,replace = TRUE)
sample <- ifelse(sample == "7", 4, sample)
exercise= seq(20,50)
sample(exercise(20,50),7,replace = TRUE)
mean(sample)
a<- exercise= seq(20,50)
a <- exercise= seq(20,50)
a<-exercise= seq(20,50)
a ->seq(20,50)
a<- seq(20,50)
d<-sample(a,7,replace = TRUE)
d
round(mean(d))
setwd("~/Documents/1. Flinders university 2/2021/Semester 2 /Applied problem solving/R")
setwd("~/Documents/1. Flinders university 2/2021/Semester 2 /Applied problem solving/R")
dat<-read.csv("weightgender.csv")
str(dat)
